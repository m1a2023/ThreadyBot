from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes
from typing import Any

from Handlers.Handler import Handler
from Handlers.RequestsHandler import getTaskById
class ConfirmationDeleteTaskHandler(Handler):
    @staticmethod
    async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE) -> Any:
        query = update.callback_query
        await query.answer()

        keyboard = [
            [InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data="deleteTask")],
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="SettingsOfProjects")]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        dataTask = await getTaskById(context.user_data["chosenTask"])
        deadline = dataTask.deadline.split("T")[0]
        textForOutput = f"–ù–∞–∑–≤–∞–Ω–∏–µ: {dataTask.title}\n–û–ø–∏—Å–∞–Ω–∏–µ: {dataTask.description}\n–î–µ–¥–ª–∞–π–Ω: {deadline}\n–°—Ç–∞—Ç—É—Å: {dataTask.status}\n–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {dataTask.priority}\n–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {dataTask.developer}"
        await query.edit_message_text(f"{textForOutput}\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É?", reply_markup=reply_markup)
