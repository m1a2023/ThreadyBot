from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes

from typing import Any

from Handlers.Handler import Handler

from ProjectManagment.ProjectManager import ProjectManager

class MainMenuHandler(Handler):
  @staticmethod
  async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await ProjectManager.get_and_update_list_projects(update, context)

    keyboard = [
      [InlineKeyboardButton("‚úèÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤", callback_data="SettingsOfProjects")],
      [InlineKeyboardButton("üîç C–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞", callback_data="EventsAndStatusOfProjects")],
      [InlineKeyboardButton("‚öôÔ∏è –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="GeneralSettings")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.callback_query:
      try:
        query = update.callback_query
        await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await query.edit_message_text(text="*\=\=–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\=\=*\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup, parse_mode="MarkdownV2")
      except:
        await context.bot.sendMessage(update.effective_chat.id, text="*\=\=–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\=\=*\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup, parse_mode="MarkdownV2")
    else:
      # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
      await update.message.reply_text(text="*\=\=–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\=\=*\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup, parse_mode="MarkdownV2")
