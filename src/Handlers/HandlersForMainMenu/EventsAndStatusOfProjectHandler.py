from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes

from typing import Any

from Handlers.Handler import Handler

class EventsAndStatusOfProjectHandler(Handler):
  @staticmethod
  async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE):

    query = update.callback_query
    await query.answer()

    keyboard = [
      [InlineKeyboardButton("üìå –¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏", callback_data="currentTasks")],
      [InlineKeyboardButton("üßë‚Äçüíª –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–∞–Ω–¥–µ", callback_data="showTeam")],
      [InlineKeyboardButton("üìä –û—Ç—á–µ—Ç—ã", callback_data="reportsMenu")],
      # [InlineKeyboardButton("ü§ñ –ü–ª–∞–Ω, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é", callback_data="Plan")],
      [InlineKeyboardButton("ü§ñ –ü–ª–∞–Ω, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é", callback_data="GeneratingPlanMenu")],
      [InlineKeyboardButton("üè† –í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="MoveToMainMenu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text("*\=\=–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞\=\=*\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup, parse_mode="MarkdownV2")
