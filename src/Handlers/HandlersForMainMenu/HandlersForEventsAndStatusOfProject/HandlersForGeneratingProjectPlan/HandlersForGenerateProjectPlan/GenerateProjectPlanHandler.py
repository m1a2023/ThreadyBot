from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes
from typing import Any
from Handlers.Handler import Handler


class GenerateProjectPlanHandler(Handler):

  @staticmethod
  async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE) -> Any:
    query = update.callback_query
    await query.answer()

    project_id = context.user_data["chosenProject"]
    # await getAllTasks(project_id) - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ –ø—Ä–æ–µ–∫—Ç—É (–µ—â–µ –Ω—É–∂–µ–Ω –±—É–¥–µ—Ç –∏–º–ø–æ—Ä—Ç) –£–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ

    # –ì–¥–µ-—Ç–æ –∑–¥–µ—Å—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∞
    
    planText = "—Ç–µ–∫—Å—Ç –ø–ª–∞–Ω–∞"
    
    await query.edit_message_text("üîÑ –ò–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∞, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
    
    keyboard = [
      [InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –ø–ª–∞–Ω", callback_data="saveGeneratedPlan")], # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞–Ω –∏ —É—Ç–æ—á–Ω—è–µ–º –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á
      [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å", callback_data="generateNewPlan")], # –ü–æ-–∏–¥–µ–µ, —ç—Ç–æ—Ç –∂–µ —Ö–µ–Ω–¥–ª–µ—Ä –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
      [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancelGenerateProjectPlan")]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(f"{planText}", reply_markup=reply_markup)