from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes
from typing import Any
from Handlers.Handler import Handler


class GenerateSubtaskHandler(Handler):

  @staticmethod
  async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE) -> Any:
    query = update.callback_query
    await query.answer()

    task_id = context.user_data["taskInCurrentTasks"]
    # await getTaskById(task_id) - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ—ã –æ –∑–∞–¥–∞—á–µ (–µ—â–µ –Ω—É–∂–µ–Ω –±—É–¥–µ—Ç –∏–º–ø–æ—Ä—Ç) –£–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ

    # –ì–¥–µ-—Ç–æ –∑–¥–µ—Å—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥—Ç–∞—Å–∫–æ–≤
    
    subtaskText = "—Ç–µ–∫—Å—Ç –ø–æ–¥–∑–∞–¥–∞—á"
    
    await query.edit_message_text("üîÑ –ò–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
    
    keyboard = [
      [InlineKeyboardButton("üòä –°–ø–∞—Å–∏–±–æ", callback_data="EventsAndStatusOfProjects")]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(f"{subtaskText}", reply_markup=reply_markup)